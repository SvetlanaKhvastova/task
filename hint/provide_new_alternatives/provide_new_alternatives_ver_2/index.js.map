{"version":3,"file":"index.js","sources":["../../../../src/libraries/index.ts","../../../../src/hint/provide_new_alternatives/provide_new_alternatives_ver_2/blocks.ts","../../../../src/hint/provide_new_alternatives/provide_new_alternatives_ver_2/main.css?raw","../../../../src/hint/provide_new_alternatives/provide_new_alternatives_ver_2/index.ts"],"sourcesContent":["declare global {\r\n  interface Window {\r\n    dataLayer: any[]\r\n    Shopify: any\r\n    clarity: any\r\n    hj: any\r\n    tippy: any\r\n    [key: string]: any\r\n    Flickity: any\r\n  }\r\n}\r\n\r\ntype eventType =\r\n  | 'Line'\r\n  | 'Link'\r\n  | 'Backdrop'\r\n  | 'Accordion'\r\n  | 'Sticky button'\r\n  | 'Button'\r\n  | 'Radio'\r\n  | 'Section'\r\n  | 'Click'\r\n  | 'Visibility'\r\n  | 'submit'\r\n  | 'Input'\r\n  | 'Change'\r\n  | 'Pagination'\r\n  | 'error'\r\n  | 'success'\r\n  | 'other'\r\n  | 'Arrows'\r\n  | 'Swipe slider'\r\n  | 'Experiment activated'\r\n  | 'Dropdown'\r\n  | 'View'\r\n\r\nexport const pushData = (name: string, desc: string, type: eventType, loc: string = '') => {\r\n  window.dataLayer = window.dataLayer || []\r\n  window.dataLayer.push({\r\n    event: 'event-to-ga4',\r\n    event_name: name,\r\n    event_desc: desc,\r\n    event_type: type,\r\n    event_loc: loc\r\n  })\r\n  console.dir(`Event: ${name} | ${desc} | ${type} | ${loc}`)\r\n}\r\n\r\ninterface StartLog {\r\n  name: string\r\n  dev: string\r\n}\r\n\r\nexport const startLog = ({ name, dev }: StartLog) => {\r\n  console.log(\r\n    `%c EXP: ${name} (DEV: ${dev})`,\r\n    `background: #3498eb; color: #fccf3a; font-size: 20px; font-weight: bold;`\r\n  )\r\n}\r\n\r\nexport const $$el = selector => document.querySelectorAll(selector)\r\nexport const $el = selector => document.querySelector(selector)\r\n\r\n// load list of scripts\r\nexport const loadScriptsOrStyles = async (urls: string[]) => {\r\n  const loadScriptOrStyle = (url: string) => {\r\n    return new Promise((resolve, reject) => {\r\n      // check script by document.scripts\r\n      const type = url.split('.').pop()\r\n      if (type === 'js') {\r\n        const loadedScripts = Array.from(document.scripts).map(script => script.src.toLowerCase())\r\n        if (loadedScripts.includes(url.toLowerCase())) {\r\n          console.log(`Script ${url} allready downloaded!`)\r\n          return resolve('')\r\n        }\r\n        const script = document.createElement('script')\r\n        script.src = url\r\n        script.onload = resolve\r\n        script.onerror = reject\r\n        document.head.appendChild(script)\r\n      } else if (type === 'css') {\r\n        const loadedStyles = Array.from(document.styleSheets).map(style => style.href?.toLowerCase())\r\n        if (loadedStyles.includes(url.toLowerCase())) {\r\n          console.log(`Style ${url} allready downloaded!`)\r\n          return resolve('')\r\n        }\r\n        const style = document.createElement('link')\r\n        style.rel = 'stylesheet'\r\n        style.href = url\r\n        style.onload = resolve\r\n        style.onerror = reject\r\n        document.head.appendChild(style)\r\n      }\r\n    })\r\n  }\r\n\r\n  for (const url of urls) {\r\n    await loadScriptOrStyle(url)\r\n    console.log(`Loaded librari ${url}`)\r\n  }\r\n  console.log('All libraries loaded!')\r\n}\r\n\r\n// clarity\r\nexport const clarityInterval = (name: string, variant = 'variant_1') => {\r\n  let int = setInterval(function () {\r\n    if (typeof window.clarity == 'function') {\r\n      clearInterval(int)\r\n      window.clarity('set', name, variant)\r\n      console.log('set', name, variant)\r\n    }\r\n  }, 1000)\r\n}\r\n\r\nexport const hjInterval = name => {\r\n  let int = setInterval(function () {\r\n    if (typeof window.hj == 'function') {\r\n      clearInterval(int)\r\n      window.hj('event', name)\r\n    }\r\n  }, 1000)\r\n}\r\n\r\n// visibility element\r\nexport const visibilityOfTime = (\r\n  selector: string | HTMLElement | Element,\r\n  eventName: string,\r\n  visiblePlace: string,\r\n  description?: string,\r\n  visibilityTxt = 'Visibility',\r\n  time = 600,\r\n  threshold = 0.5\r\n) => {\r\n  let observer: IntersectionObserver\r\n  let timer: NodeJS.Timeout\r\n\r\n  observer = new IntersectionObserver(\r\n    function (entries) {\r\n      if (entries[0].isIntersecting === true) {\r\n        timer = setTimeout(() => {\r\n          pushData(\r\n            eventName,\r\n            (entries[0].target as HTMLElement).dataset.visible || description || '',\r\n            visibilityTxt as eventType,\r\n            visiblePlace\r\n          )\r\n          observer.disconnect()\r\n        }, time)\r\n      } else {\r\n        // console.log('Element is not fully visible')\r\n        clearTimeout(timer) // Clear the timer if the element is not visible\r\n      }\r\n    },\r\n    { threshold: [threshold] }\r\n  )\r\n\r\n  if (typeof selector === 'string') {\r\n    const element = document.querySelector(selector)\r\n\r\n    if (element) {\r\n      observer.observe(element)\r\n    }\r\n  } else {\r\n    observer.observe(selector)\r\n  }\r\n}\r\n\r\n// waitForElement\r\nexport function waitForElement(selector: string) {\r\n  return new Promise(resolve => {\r\n    if (document.querySelector(selector)) {\r\n      return resolve(document.querySelector(selector))\r\n    }\r\n\r\n    const observer = new MutationObserver(() => {\r\n      if (document.querySelector(selector)) {\r\n        resolve(document.querySelector(selector))\r\n        observer.disconnect()\r\n      }\r\n    })\r\n\r\n    observer.observe(document.documentElement, {\r\n      childList: true,\r\n      subtree: true,\r\n      characterData: true\r\n    })\r\n  })\r\n}\r\n\r\nexport const checkScrollSpeed = (function (settings) {\r\n  settings = settings === undefined ? {} : (settings as any)\r\n\r\n  let lastPos: number | null\r\n  let newPos: number | null\r\n  let timer: string | number | NodeJS.Timeout | undefined\r\n  let delta: number\r\n  let delay = (settings as any)?.delay || 50\r\n\r\n  function clear() {\r\n    lastPos = null\r\n    delta = 0\r\n  }\r\n\r\n  clear()\r\n\r\n  return function () {\r\n    newPos = window.scrollY\r\n    if (lastPos != null) {\r\n      delta = newPos - lastPos\r\n    }\r\n    lastPos = newPos\r\n    clearTimeout(timer)\r\n    timer = setTimeout(clear, delay)\r\n    return delta\r\n  }\r\n})()\r\nfunction delay(x: number) {\r\n  return new Promise(resolve => setTimeout(resolve, x))\r\n}\r\nexport const checkScrollPosition = async (headerOff: number, elPosition: HTMLElement) => {\r\n  const headerOffset = headerOff\r\n  const elementPosition = elPosition?.getBoundingClientRect().top\r\n  const offsetPosition = elementPosition + window.pageYOffset - headerOffset\r\n\r\n  window.scrollTo({\r\n    top: offsetPosition,\r\n    behavior: 'smooth'\r\n  })\r\n\r\n  await delay(800)\r\n  return true\r\n}\r\n\r\nexport const getCookies = (name: string) => {\r\n  const value = `; ${document.cookie}`\r\n  if (value.includes(`; ${name}=`)) {\r\n    const parts = value.split(`; ${name}=`)\r\n    return parts.pop()?.split(';').shift()\r\n  } else {\r\n    console.log('No cookie')\r\n    return null\r\n  }\r\n}\r\n\r\nexport const scrollToElement = (selector: string, offset: number = 100) => {\r\n  const element = document.querySelector(selector)\r\n  if (!element) return\r\n  const elementPosition = element.getBoundingClientRect().top\r\n  const offsetPosition = elementPosition - offset\r\n  window.scrollBy({\r\n    top: offsetPosition,\r\n    behavior: 'smooth'\r\n  })\r\n}\r\n\r\nexport const scrollToHtmlElement = (element: HTMLElement, offset: number = 100) => {\r\n  const elementPosition = element.getBoundingClientRect().top + window.scrollY\r\n  const offsetPosition = elementPosition - offset\r\n  window.scrollTo({\r\n    top: offsetPosition,\r\n    behavior: 'smooth'\r\n  })\r\n}\r\n","import { svg, git } from './data'\r\n\r\nexport const newBtnSkipVerB = (price: string): string => {\r\n  return /* HTML */ ` <div class=\"new_btn_skip ver_b\">Skip and start reading for just <span> ${price}</span></div> `\r\n}\r\n\r\nexport const newBtnSkipVerC = (): string => {\r\n  return /* HTML */ ` <div class=\"new_btn_skip ver_c\">Opt for the minimum cost</div> `\r\n}\r\n","export default \".crs_subscriptionPlan header button[aria-label=\\\"Go back\\\"] {\\n  display: none !important;\\n}\\n.crs_subscriptionPlan main > .pt-4 {\\n  padding: 16px !important;\\n}\\n.crs_subscriptionPlan main > .pt-4 > .gap-4 {\\n  gap: 16px !important;\\n}\\n.crs_subscriptionPlan main > .pt-4 > .gap-4 > .gap-3 {\\n  gap: 16px !important;\\n}\\n.crs_subscriptionPlan main > .pt-4 > .gap-4 > .gap-3 > p.font-semibold {\\n  color: #121620;\\n  font-family: \\\"Inter\\\", sans-serif;\\n  font-size: 24px;\\n  font-weight: 600;\\n  line-height: 32px;\\n}\\n.crs_subscriptionPlan main > .pt-4 > .gap-4 > .gap-3 > p.text-gray-600 {\\n  color: #4a567a;\\n  font-family: \\\"Inter\\\", sans-serif;\\n  font-size: 18px;\\n  font-weight: 400;\\n  line-height: 26px;\\n}\\n.crs_subscriptionPlan main > .pt-4 > .gap-4 > .gap-4 {\\n  gap: 20px !important;\\n}\\n.crs_subscriptionPlan main > .pt-4 > .gap-4 > .gap-4 > .text-gray-700 {\\n  color: #4a567a;\\n  font-size: 16px;\\n  font-weight: 700;\\n  line-height: 24px;\\n}\\n.crs_subscriptionPlan div.sticky {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 12px;\\n  margin-top: 10px;\\n}\\n.crs_subscriptionPlan div.sticky > button {\\n  width: 100%;\\n  max-width: 100%;\\n}\\n.crs_subscriptionPlan .new_btn_skip {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-wrap: wrap;\\n  gap: 5px;\\n  height: 56px;\\n  width: 100%;\\n  border-radius: 8px;\\n  border: 2px solid #066fde;\\n  color: #2b71d7;\\n  font-family: \\\"Inter\\\", sans-serif;\\n  font-size: 18px;\\n  font-weight: 500;\\n  line-height: 24px;\\n}/*# sourceMappingURL=main.css.map */\"","import { startLog, $el, $$el, waitForElement, pushData, clarityInterval } from '../../../libraries'\r\nimport { newBtnSkipVerC } from './blocks'\r\nimport { svg } from './data'\r\n// @ts-ignore\r\nimport mainStyle from './main.css?raw'\r\n\r\nconst device = window.innerWidth < 768 ? 'mobile' : 'desktop'\r\n\r\nclass ProvideNewAlternatives {\r\n  device: 'mobile' | 'desktop'\r\n  lastPath: string\r\n\r\n  constructor(device) {\r\n    this.device = device\r\n    this.lastPath = window.location.pathname\r\n\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    startLog({ name: 'Provide new alternatives', dev: 'SKh' })\r\n    clarityInterval('exp_hyp5', 'variant_2')\r\n\r\n    this.observeMain()\r\n    this.loadFontsAndStyles()\r\n    this.allFunctionsInitHandler()\r\n  }\r\n\r\n  observeMain() {\r\n    let observer = new MutationObserver(mutations => {\r\n      for (let mutation of mutations) {\r\n        if (window.location.pathname !== this.lastPath) {\r\n          this.lastPath = window.location.pathname\r\n          this.allFunctionsInitHandler()\r\n        }\r\n      }\r\n    })\r\n\r\n    observer.observe($el('body'), { childList: true, subtree: true })\r\n  }\r\n\r\n  loadFontsAndStyles() {\r\n    if (!$el('.crs_inter')) {\r\n      document.head.insertAdjacentHTML(\r\n        'afterbegin',\r\n        `<link class=\"crs_inter\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap\" rel=\"stylesheet\">`\r\n      )\r\n    }\r\n\r\n    if (!$el('.crs_style')) {\r\n      document.head.insertAdjacentHTML('beforeend', `<style class=\"crs_style\">${mainStyle}</style>`)\r\n    }\r\n  }\r\n\r\n  // allFunctions\r\n  allFunctionsInitHandler() {\r\n    if (this.checkPage() === 'subscriptionPlan') {\r\n      console.log(`subscriptionPlan`)\r\n      this.addClassToBody()\r\n      this.renderNewBtnSkip()\r\n    } else {\r\n      console.log(this.checkPage())\r\n      this.removeClassFromBody()\r\n      $el('.new_btn_skip')?.remove()\r\n    }\r\n  }\r\n\r\n  checkPage(): string {\r\n    const url = window.location.href\r\n    if (url.includes('paywall')) return 'paywall'\r\n    if (url.includes('subscription-plan')) return 'subscriptionPlan'\r\n    if (url.includes('email')) return 'email'\r\n    return 'other'\r\n  }\r\n\r\n  addClassToBody() {\r\n    waitForElement('[alt=\"arrow-top\"]').then(i => {\r\n      const body = $el('body')\r\n      body.classList.add('crs_subscriptionPlan')\r\n      pushData('exp_new_astro_visibility_02', 'Screen view', 'View', 'Try hint for 1 week')\r\n    })\r\n  }\r\n\r\n  removeClassFromBody() {\r\n    const body = $el('body')\r\n    if (body.classList.contains('crs_subscriptionPlan')) {\r\n      body.classList.remove('crs_subscriptionPlan')\r\n    }\r\n  }\r\n\r\n  renderNewBtnSkip() {\r\n    waitForElement('.crs_subscriptionPlan [alt=\"arrow-top\"]').then(i => {\r\n      waitForElement('.bg-gray-100').then(i => {\r\n        const сontainerElement = $el('.crs_subscriptionPlan div.sticky') as HTMLElement\r\n\r\n        if (!$el('.new_btn_skip')) {\r\n          сontainerElement.insertAdjacentHTML('beforeend', newBtnSkipVerC())\r\n        }\r\n        this.addClickhandlerOnNewBtnSkip()\r\n      })\r\n    })\r\n  }\r\n\r\n  addClickhandlerOnNewBtnSkip() {\r\n    waitForElement('.new_btn_skip').then(i => {\r\n      const btnSkip = $el('.new_btn_skip') as HTMLElement\r\n      const btnContinue = $el('div.sticky > button') as HTMLElement\r\n      const firstPlan = $$el('.bg-gray-100')[0]\r\n      const containerPlan = $el('.crs_subscriptionPlan main > .pt-4 > .gap-4 > .gap-4')\r\n\r\n      btnSkip.addEventListener('click', e => {\r\n        if (e.target && (e.target as HTMLElement).classList.contains('ver_b')) {\r\n          pushData('exp_new_astro_button_01', 'Skip and start reading for just $1', 'Click', 'Try hint for 1 week')\r\n        } else {\r\n          pushData('exp_new_astro_button_02', 'Opt for the minimum cost', 'Click', 'Try hint for 1 week')\r\n        }\r\n\r\n        if (containerPlan) {\r\n          containerPlan.style.opacity = '0'\r\n          firstPlan?.click()\r\n          btnContinue?.click()\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nwaitForElement('body').then(element => {\r\n  new ProvideNewAlternatives(device)\r\n})\r\n"],"names":["pushData","name","desc","type","loc","startLog","dev","$$el","selector","$el","clarityInterval","variant","int","waitForElement","resolve","observer","settings","lastPos","newPos","timer","delta","delay","clear","newBtnSkipVerC","mainStyle","device","ProvideNewAlternatives","mutations","mutation","_a","url","i","body","сontainerElement","btnSkip","btnContinue","firstPlan","containerPlan","e","element"],"mappings":"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"}